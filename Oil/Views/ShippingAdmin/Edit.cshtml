@model Oil.Models.ShippingZone
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Or your admin layout path
    ViewData["Title"] = "تعديل منطقة الشحن";
}

<style>
    .form-container-custom {
        background-color: #fff;
        padding: 30px 40px;
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        max-width: 750px;
        margin: 40px auto;
        animation: fadeIn 0.5s ease-out;
    }

    .page-title-custom {
        font-size: 1.8rem;
        font-weight: 700;
        color: #0056b3; /* Darker blue for titles */
        text-align: center;
        margin-bottom: 30px;
        padding-bottom: 10px;
        border-bottom: 2px solid #007bff; /* Primary blue */
        display: inline-block;
    }

    .form-title-container {
        text-align: center;
        margin-bottom: 25px;
    }

    .form-label-custom {
        font-weight: 600;
        color: #343a40;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }

    .form-control-custom {
        border-radius: 10px;
        padding: 10px 15px;
        border: 1px solid #ced4da;
        transition: border-color 0.2s ease, box-shadow 0.2s ease;
        font-size: 1rem;
    }

        .form-control-custom:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.2);
        }

    .form-check-input-custom {
        width: 1.25em;
        height: 1.25em;
        margin-top: 0.25em;
        cursor: pointer;
    }

    .form-check-label-custom {
        margin-inline-start: 0.5rem;
        font-weight: 500;
        cursor: pointer;
    }

    .btn-submit-custom-edit { /* Renamed for edit */
        background-color: #ffc107; /* Yellow for edit/save */
        border-color: #ffc107;
        color: #212529; /* Dark text for yellow bg */
        padding: 10px 25px;
        font-size: 1.05rem;
        font-weight: 600;
        border-radius: 50px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(255, 193, 7, 0.25);
    }

        .btn-submit-custom-edit:hover {
            background-color: #e0a800; /* Darker yellow */
            border-color: #d39e00;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(255, 193, 7, 0.35);
        }

    .btn-back-custom {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
        padding: 10px 25px;
        font-size: 1.05rem;
        font-weight: 600;
        border-radius: 50px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.2);
    }

        .btn-back-custom:hover {
            background-color: #5a6268;
            border-color: #545b62;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(108, 117, 125, 0.3);
        }

    .button-group {
        display: flex;
        gap: 15px;
        margin-top: 25px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(15px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="container-fluid mt-4">
    <div class="form-title-container">
        <h2 class="page-title-custom">@ViewData["Title"]: @Model.NameAr</h2>
    </div>
    <div class="form-container-custom">
        <form asp-action="Edit" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />
            @if (Model.ShippingCost != null)
            {
                <input type="hidden" asp-for="ShippingCost.ShippingZoneId" />
                // If ShippingCost has its own PK (e.g., ShippingCostId), include it as hidden if necessary for EF to track the existing entity.
                // Example: <input type="hidden" asp-for="ShippingCost.Id" />
                // However, since ShippingCostId is the PK and also the FK, ShippingCost.ShippingZoneId is sufficient for EF to identify it.
            }


            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

            <div class="row g-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="NameAr" class="form-label-custom"></label>
                        <input asp-for="NameAr" class="form-control form-control-custom" />
                        <span asp-validation-for="NameAr" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="NameEn" class="form-label-custom"></label>
                        <input asp-for="NameEn" class="form-control form-control-custom" />
                        <span asp-validation-for="NameEn" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mt-3">
                <label asp-for="ShippingCost.Cost" class="form-label-custom">تكلفة الشحن (بالجنيه المصري)</label>
                <div class="input-group">
                    <span class="input-group-text">ج.م</span>
                    @* Ensure ShippingCost is not null before accessing Cost *@
                    <input asp-for="ShippingCost.Cost" type="number" step="0.01" min="0" class="form-control form-control-custom" value="@(Model.ShippingCost?.Cost)" />
                </div>
                <span asp-validation-for="ShippingCost.Cost" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <div class="form-check form-switch">
                    <input asp-for="IsActive" class="form-check-input form-check-input-custom" type="checkbox" role="switch" id="isActiveSwitchEdit" />
                    <label asp-for="IsActive" class="form-check-label-custom" for="isActiveSwitchEdit">تفعيل منطقة الشحن</label>
                </div>
                <span asp-validation-for="IsActive" class="text-danger"></span>
            </div>

            <div class="button-group">
            <div class="button-group">
                <button type="submit" class="btn btn-submit-custom-edit">
                    <i class="fas fa-save me-2"></i>حفظ التعديلات
                </button>
                <a asp-action="Index" class="btn btn-back-custom">
                    <i class="fas fa-arrow-alt-circle-right me-2"></i>العودة إلى القائمة
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
